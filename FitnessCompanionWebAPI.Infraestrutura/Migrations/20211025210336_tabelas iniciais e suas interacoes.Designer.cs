// <auto-generated />
using System;
using FitnessCompanionWebAPI.Infraestrutura.BancoDeDados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessCompanionWebAPI.Infraestrutura.Migrations
{
    [DbContext(typeof(FitnessCompanionContexto))]
    [Migration("20211025210336_tabelas iniciais e suas interacoes")]
    partial class tabelasiniciaisesuasinteracoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atividade");
                });

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Treino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AtividadeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasMaxLength(255)
                        .HasColumnType("float");

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Treino");
                });

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sobre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24a5e110-2e78-45a2-9798-434af13336ed"),
                            Avaliacao = 0.0,
                            DataCriacao = new DateTime(2021, 10, 25, 18, 3, 36, 405, DateTimeKind.Local).AddTicks(6488),
                            Email = "philipi.altoe@gmail.com",
                            Nome = "Philipi",
                            Senha = "123",
                            Sobrenome = "Carvalho"
                        });
                });

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Atividade", b =>
                {
                    b.HasOne("FitnessCompanionWebAPI.Dominio.Entidades.Usuario", null)
                        .WithMany("AtividadesPraticantes")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Treino", b =>
                {
                    b.HasOne("FitnessCompanionWebAPI.Dominio.Entidades.Atividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("AtividadeId");

                    b.HasOne("FitnessCompanionWebAPI.Dominio.Entidades.Usuario", null)
                        .WithMany("Treinos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("FitnessCompanionWebAPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("AtividadesPraticantes");

                    b.Navigation("Treinos");
                });
#pragma warning restore 612, 618
        }
    }
}
